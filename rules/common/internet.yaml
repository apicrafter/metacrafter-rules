name: internet
description: Internet infrastructure identifiers
context: internet
lang: common
rules:
  domainname:
    key: domainname
    name: Domain or host name
    rule: domainname,domain_name,host_name,hostname
    match: text
    type: field
  ipvaddr:
    key: ipaddr
    name: IP address (IPv4 or IPv6)
    rule: ipaddr,ipaddress,ip_addr,ip_address
    type: field
    match: text
    is_pii: True
  ipv4:
    key: ipv4
    name: IPv4 address
    rule: Word(nums, min=1, max=3) + 3*('.'+Word(nums, min=1, max=4))
    validator: metacrafterext.rules.common.internet.validate_ipv4
    maxlen: 15
    minlen: 7
    priority: 1
    match: ppr
    type: data
    is_pii: True
  ipv6:
    key: ipv6
    is_pii: True
    name: IPv6 address
    rule: ((Word('0123456789abcdefABCDEF', min = 1, max = 4) + Literal(':').suppress()) * 7 + Word('0123456789abcdefABCDEF', min = 1, max = 4)) ^ (Word('0123456789abcdefABCDEF', min = 1, max = 4) + (Literal(':').suppress() + Word('0123456789abcdefABCDEF', min = 1, max = 4)) * (0, 6) + Literal('::')) ^ (Word('0123456789abcdefABCDEF', min = 1, max = 4) + (Literal(':').suppress() + Word('0123456789abcdefABCDEF', min = 1, max = 4)) * (0, 5) + Literal('::') + Word('0123456789abcdefABCDEF', min = 1, max = 4)) ^ (Word('0123456789abcdefABCDEF', min = 1, max = 4) + (Literal(':').suppress() + Word('0123456789abcdefABCDEF', min = 1, max = 4)) * (0, 4) + Literal('::') + (Word('0123456789abcdefABCDEF', min = 1, max = 4) + Literal(':').suppress()) + Word('0123456789abcdefABCDEF', min = 1, max = 4)) ^ (Word('0123456789abcdefABCDEF', min = 1, max = 4) + (Literal(':').suppress() + Word('0123456789abcdefABCDEF', min = 1, max = 4)) * (0, 3) + Literal('::') + (Word('0123456789abcdefABCDEF', min = 1, max = 4) + Literal(':').suppress()) * 2 + Word('0123456789abcdefABCDEF', min = 1, max = 4)) ^ (Word('0123456789abcdefABCDEF', min = 1, max = 4) + (Literal(':').suppress() + Word('0123456789abcdefABCDEF', min = 1, max = 4)) * (0, 2) + Literal('::') + (Word('0123456789abcdefABCDEF', min = 1, max = 4) + Literal(':').suppress()) * 3 + Word('0123456789abcdefABCDEF', min = 1, max = 4)) ^ (Word('0123456789abcdefABCDEF', min = 1, max = 4) + (Literal(':').suppress() + Word('0123456789abcdefABCDEF', min = 1, max = 4)) * (0, 1) + Literal('::') + (Word('0123456789abcdefABCDEF', min = 1, max = 4) + Literal(':').suppress()) * 4 + Word('0123456789abcdefABCDEF', min = 1, max = 4)) ^ (Word('0123456789abcdefABCDEF', min = 1, max = 4) + Literal('::') + (Word('0123456789abcdefABCDEF', min = 1, max = 4) + Literal(':').suppress()) * 5 + Word('0123456789abcdefABCDEF', min = 1, max = 4))
    validator: metacrafterext.rules.common.internet.validate_ipv6
    maxlen: 39
    minlen: 15
    priority: 1
    match: ppr
    type: data
  eui48:
    key: eui48
    is_pii: True
    name: MAC address (EUI48)
    rule:  Word(hexnums, min=2, max=2) + 5*(':'+Word(hexnums, min=2, max=2))
    validator: metacrafterext.rules.common.internet.validate_macaddr
    maxlen: 17
    minlen: 17
    priority: 1
    match: ppr
    type: data
  emailknown:
    key: email
    is_pii: True
    name: Email
    rule: email,e_mail,e-mail,contact e-mail,email address,contactemail,email_address,contact_email,email_comercial
    type: field
    match: text
  emailknownpat:
    key: email
    is_pii: True
    name: Email by pattern
    rule: Word(alphanums) + "email" +  lineEnd
    type: field
    match: ppr
  emailknownprefix:
    key: email
    is_pii: True
    name: Email by prefix pat
    rule: '"email_" + Word(alphanums) +  lineEnd'
    type: field
    match: ppr
  websiteknown:
    key: url
    name: URL/website by known name
    rule: url,website,uri,web_site,website address,website_address,website_url,image_url,download_url,site_url
    type: field
    match: text
  urlknownpat:
    key: url
    name: URL/website by known name pattern
    rule: Word(printables) + "url" +  lineEnd
    type: field
    match: ppr
  url:
    key: url
    name: Web URL
    maxlen: 1024
    minlen: 5
    priority: 1
    match: func
    type: data
    rule: metacrafterext.rules.common.common._validate_url
  email:
    key: email
    is_pii: True
    name: Email
    maxlen: 1024
    minlen: 3
    priority: 1
    type: data
    match: func
    rule: metacrafterext.rules.common.common._validate_email
